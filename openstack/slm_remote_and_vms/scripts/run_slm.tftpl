#!/bin/bash
slm_root_dir=/tmp/slm

#### INSTALL MAVEN, JAVA
wget https://dlcdn.apache.org/maven/maven-3/3.9.3/binaries/apache-maven-3.9.3-bin.tar.gz
tar xzvf apache-maven-3.9.3-bin.tar.gz
cd apache-maven-3.9.3/bin
sudo ln -s /home/ansible/apache-maven-3.9.3/bin/mvn /usr/local/bin/

sudo apt update
sudo apt install ansible git openjdk-18-jdk ca-certificates curl gnupg -y
sudo install -m 0755 -d /etc/apt/keyrings

#### INSTALL DOCKER
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

%{ if run_portainer == true }
#### INSTALL PORTAINER
  mkdir -p /tmp/portainer_data
  echo "${portainer_admin_password}" > /tmp/portainer_data/password
  sudo docker volume create portainer_data
  sudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /tmp/portainer_data:/data portainer/portainer-ce:latest --admin-password-file /data/password -H unix:///var/run/docker.sock
%{ endif }


#### GET SLM
cd /tmp
git clone -b ${eclipse_slm_branch} ${eclipse_slm_git_url}

compose_dir="$slm_root_dir/stack/compose"

sed -i '/^SLM_HOSTNAME=/s/=.*/=${slm_hostname}/' $compose_dir/.env
sed -i '/^SLM_IP=/s/=.*/=${slm_ip}/' $compose_dir/.env
sed -i '/^CONSUL_ADVERTISE=/s/=.*/=${slm_ip}/' $compose_dir/.env


%{ if slm_build_docker_images == true }
#### BUILD SLM IMAGES
  cd $slm_root_dir
  sudo mvn -DskipTests=true -T 8 -f pom.xml clean package

  cd $compose_dir
  DOCKER_COMPOSE_COMMAND="docker compose -f base.awx.yml -f base.consul.yml -f base.keycloak.yml -f base.vault.yml -f slm.yml -f catalog.yml -f config-exporter.yml -f build.yml"
  sudo $DOCKER_COMPOSE_COMMAND build --no-cache awx-fixed-files
  sudo $DOCKER_COMPOSE_COMMAND build --no-cache awx-web awx-web-no-jwt awx-task awx-postgres awx-init
  sudo $DOCKER_COMPOSE_COMMAND build --no-cache common-database-mariadb
  sudo $DOCKER_COMPOSE_COMMAND build --no-cache consul consul-init
  sudo $DOCKER_COMPOSE_COMMAND build --no-cache keycloak keycloak-init
  sudo $DOCKER_COMPOSE_COMMAND build --no-cache vault vault-init
  sudo $DOCKER_COMPOSE_COMMAND build --no-cache config-exporter
%{ endif }


##### RUN SLM
cd $compose_dir
sudo docker compose up -d